<Page
    x:Class="PhotoStorm.UniversalApp.Views.MainPageNew"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PhotoStorm.UniversalApp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:maps="using:Windows.UI.Xaml.Controls.Maps"
    xmlns:models="using:PhotoStorm.UniversalApp.Models"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:actions="using:PhotoStorm.UniversalApp.Actions"
    xmlns:viewModels="using:PhotoStorm.UniversalApp.ViewModels"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:maps1="using:Windows.Services.Maps"
    xmlns:converters="using:PhotoStorm.UniversalApp.Converters"
    x:Name="Page"
    mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:MainPageViewModel }">
    <Page.BottomAppBar>
        <AppBar>
            
        </AppBar>
    </Page.BottomAppBar>
    <Page.DataContext>
        <viewModels:MainPageViewModel></viewModels:MainPageViewModel>
    </Page.DataContext>
    <Page.Resources>
        <converters:AutoSuggestQueryParameterConverter x:Key="ArgsConverter" />
    </Page.Resources>
    
    <interactivity:Interaction.Behaviors>
        <interactivity:BehaviorCollection>
            <core:EventTriggerBehavior EventName="SizeChanged">
                <core:InvokeCommandAction Command="{Binding AdaptWindowSizeCommand}"></core:InvokeCommandAction>
            </core:EventTriggerBehavior>
        </interactivity:BehaviorCollection>
    </interactivity:Interaction.Behaviors>
    
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Button1.Content"  
                    Value="Narrow" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="Big">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Button1.Content"  
                    Value="Wide" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Pivot>
            <PivotItem Header="Карта">
                <Grid>
                    <maps:MapControl x:Name="Map" Style="Road"
                             MapServiceToken="{StaticResource MapApiKey}"
                             ZoomInteractionMode="GestureAndControl"
                             LandmarksVisible="True"
                             IsRightTapEnabled="True"
                             Center="{Binding DeviceLocation, Mode=TwoWay}"
                             ZoomLevel="{Binding ZoomLevel, Mode=TwoWay}">
                        <maps:MapItemsControl>
                            <!--<maps:MapPolygon FillColor="#807CFC00" StrokeColor="#80008000"  Path="{Binding SelectionAreaCirclePath}"></maps:MapPolygon>-->
                        </maps:MapItemsControl>
                    </maps:MapControl>
                    <Grid x:Name="TopToolBar" VerticalAlignment="Top" Background="DarkGray" Opacity="0.7">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        
                        <AutoSuggestBox Margin="20,0" Grid.Column="0"
                                        VerticalAlignment="Center" 
                                        QueryIcon="Find" 
                                        Text="{Binding SearchAddress, Mode=TwoWay}"
                                        PlaceholderText="Адрес" 
                                        ItemsSource="{Binding SearchedLocations, Mode=TwoWay}"
                                        UpdateTextOnSelect="True">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="QuerySubmitted">
                                    <core:InvokeCommandAction 
                                          Command="{Binding SearchLocationCommand}"
                                          InputConverter="{StaticResource ArgsConverter}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            <AutoSuggestBox.ItemTemplate>
                                <DataTemplate x:DataType="maps1:MapLocation">
                                    <TextBlock Foreground="DarkSlateGray" Text="{Binding Address.FormattedAddress}"></TextBlock>
                                </DataTemplate>
                            </AutoSuggestBox.ItemTemplate>
                        </AutoSuggestBox>
                        <Slider Margin="10,0" Grid.Column="1" Value="{Binding Radius, Mode=TwoWay}" Minimum="1000" Maximum="50000">
                            <Slider.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock>
                                        <Run>Радиус</Run>
                                        <Run Text="{Binding Radius}"></Run>
                                        <Run>м</Run>
                                    </TextBlock>
                                </DataTemplate>
                            </Slider.HeaderTemplate>
                        </Slider>
                        <StackPanel Grid.Column="2" Orientation="Horizontal">
                            <AppBarButton Label="Старт" Command="{Binding StartAdapterCommand}">
                                <AppBarButton.Icon>
                                    <FontIcon FontFamily="{StaticResource FontAwesome}" Glyph="{StaticResource StartButtonGlyph}"></FontIcon>
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton Label="Стоп" Command="{Binding StopAdapterCommand}">
                                <AppBarButton.Icon>
                                    <FontIcon FontFamily="{StaticResource FontAwesome}" Glyph="{StaticResource StopButtonGlyph}"></FontIcon>
                                </AppBarButton.Icon>
                            </AppBarButton>

                            <AppBarToggleButton Label="На карте" IsChecked="{Binding ShowOnMap, Mode=TwoWay}">
                                <AppBarToggleButton.Icon>
                                    <FontIcon FontFamily="{StaticResource FontAwesome}" Glyph="{StaticResource OnMapGlyph}"></FontIcon>
                                </AppBarToggleButton.Icon>
                            </AppBarToggleButton>
                        </StackPanel>
                    </Grid>
                </Grid>
                
                
            </PivotItem>
            <PivotItem Header="Галерея">
                <Grid>
                    <GridView IsHoldingEnabled="True" CharacterSpacing="0" x:Name="GridView" AutomationProperties.AutomationId="ItemGridView" ItemsSource="{Binding Photos}" SelectedItem="{Binding SelectedItem, Mode=TwoWay}">
                        <GridView.ItemTemplate>
                            <DataTemplate x:DataType="models:VkPhotoWithUserLink">
                                <Grid x:Name="ItemGrid">
                                    <interactivity:Interaction.Behaviors>
                                        <interactivity:BehaviorCollection>
                                            <core:EventTriggerBehavior EventName="Holding">
                                                <actions:OpenMenuFlyoutAction></actions:OpenMenuFlyoutAction>
                                            </core:EventTriggerBehavior>
                                            <core:EventTriggerBehavior EventName="RightTapped">
                                                <actions:OpenMenuFlyoutAction></actions:OpenMenuFlyoutAction>
                                            </core:EventTriggerBehavior>
                                        </interactivity:BehaviorCollection>
                                    </interactivity:Interaction.Behaviors>
                                    <MenuFlyout.AttachedFlyout>
                                        <MenuFlyout>
                                            <MenuFlyout.MenuFlyoutPresenterStyle>
                                                <Style TargetType="MenuFlyoutPresenter">
                                                    <Setter Property="Padding" Value="5"></Setter>
                                                </Style>
                                            </MenuFlyout.MenuFlyoutPresenterStyle>
                                            <MenuFlyoutItem Text="Удалить" 
                                                            Command="{Binding ElementName=GridView, Path=DataContext.RemoveItemCommand}"
                                                            CommandParameter="{Binding}">
                                                <MenuFlyoutItem.Template>
                                                    <ControlTemplate TargetType="MenuFlyoutItem">
                                                        <StackPanel Orientation="Horizontal">
                                                            <FontIcon Margin="5,0,0,0" FontFamily="{StaticResource FontAwesome}" Glyph="&#xf1f8;"/>
                                                            <TextBlock Margin="5,0,0,0" Text="{TemplateBinding Text}" />
                                                        </StackPanel>
                                                    </ControlTemplate>
                                                </MenuFlyoutItem.Template>
                                            </MenuFlyoutItem>

                                            <MenuFlyoutItem Text="Очистить все" 
                                                            Command="{Binding ElementName=GridView, Path=DataContext.RemoveAllItemsCommand}">
                                                <MenuFlyoutItem.Template>
                                                    <ControlTemplate TargetType="MenuFlyoutItem">
                                                        <StackPanel Orientation="Horizontal">
                                                            <FontIcon Margin="5,0,0,0" FontFamily="{StaticResource FontAwesome}" Glyph="&#xf00d;"/>
                                                            <TextBlock Margin="5,0,0,0" Text="{TemplateBinding Text}" />
                                                        </StackPanel>
                                                    </ControlTemplate>
                                                </MenuFlyoutItem.Template>
                                            </MenuFlyoutItem>
                                        </MenuFlyout>
                                    </MenuFlyout.AttachedFlyout>
                                    <Border HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Image Source="{Binding Image}" Stretch="UniformToFill"/>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                        <GridView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapGrid ItemWidth="{Binding DynamicPhotoSize}" 
                                      ItemHeight="{Binding DynamicPhotoSize}" 
                                      Orientation="Horizontal"
                                      MaximumRowsOrColumns="{Binding MaximumColumns}">
                                    <interactivity:Interaction.Behaviors>
                                        <interactivity:BehaviorCollection>
                                            <core:EventTriggerBehavior EventName="SizeChanged">
                                                <core:InvokeCommandAction Command="{Binding AdaptWrapGridSizeCommand}"></core:InvokeCommandAction>
                                            </core:EventTriggerBehavior>
                                        </interactivity:BehaviorCollection>
                                    </interactivity:Interaction.Behaviors>
                                </WrapGrid>
                            </ItemsPanelTemplate>
                        </GridView.ItemsPanel>
                        <GridView.ItemContainerStyle>
                            <Style TargetType="GridViewItem">
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Margin" Value="0" />
                            </Style>
                        </GridView.ItemContainerStyle>
                    </GridView>

                    <Grid HorizontalAlignment="Stretch" Height="{Binding AvailableModalSize}" Width="{Binding AvailableModalSize}" Visibility="{Binding SelectedItem, Converter={StaticResource NullToVisibilityConverter}}">
                        <Border>
                            <Grid>
                                <Image Stretch="UniformToFill" Source="{Binding SelectedItem.Image}" ManipulationMode="TranslateY" >
                                    <interactivity:Interaction.Behaviors>
                                        <interactivity:BehaviorCollection>
                                            <core:EventTriggerBehavior EventName="Tapped">
                                                <core:InvokeCommandAction Command="{Binding ShowLinkCommand}"></core:InvokeCommandAction>
                                            </core:EventTriggerBehavior>
                                        </interactivity:BehaviorCollection>
                                    </interactivity:Interaction.Behaviors>
                                </Image>
                                
                                <Grid HorizontalAlignment="Right" Width="40" Opacity="0.6" VerticalAlignment="Top" Height="40" Background="DarkSlateGray">
                                    <TextBlock Text="{StaticResource CloseButtonGlyph}" FontFamily="{StaticResource FontAwesome}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="DarkGray"/>
                                    <interactivity:Interaction.Behaviors>
                                        <interactivity:BehaviorCollection>
                                            <core:EventTriggerBehavior EventName="Tapped">
                                                <core:InvokeCommandAction Command="{Binding CloseDetails}"></core:InvokeCommandAction>
                                            </core:EventTriggerBehavior>
                                        </interactivity:BehaviorCollection>
                                    </interactivity:Interaction.Behaviors>
                                </Grid>

                                <Grid HorizontalAlignment="Left" Width="50" Opacity="0.6" VerticalAlignment="Center" Height="50" Background="DarkSlateGray">
                                    <TextBlock Text="{StaticResource GalleryModalBackwardButtonGlyph}" FontFamily="{StaticResource FontAwesome}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="DarkGray"/>
                                    <interactivity:Interaction.Behaviors>
                                        <interactivity:BehaviorCollection>
                                            <core:EventTriggerBehavior EventName="Tapped">
                                                <core:InvokeCommandAction Command="{Binding PrevVictimCommand}"></core:InvokeCommandAction>
                                            </core:EventTriggerBehavior>
                                        </interactivity:BehaviorCollection>
                                    </interactivity:Interaction.Behaviors>
                                </Grid>
                               
                                <Grid HorizontalAlignment="Right" Width="50" Opacity="0.6" VerticalAlignment="Center" Height="50" Background="DarkSlateGray">
                                    <TextBlock Text="{StaticResource GalleryModalForwardButtonGlyph}" FontFamily="{StaticResource FontAwesome}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="DarkGray"/>
                                    <interactivity:Interaction.Behaviors>
                                        <interactivity:BehaviorCollection>
                                            <core:EventTriggerBehavior EventName="Tapped">
                                                <core:InvokeCommandAction Command="{Binding NextVictimCommand}"></core:InvokeCommandAction>
                                            </core:EventTriggerBehavior>
                                        </interactivity:BehaviorCollection>
                                    </interactivity:Interaction.Behaviors>
                                </Grid>

                                <Border Background="DarkSlateGray" Opacity="0.6" VerticalAlignment="Bottom" Visibility="{Binding IsShowLink, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Padding="2">
                                        <TextBlock Opacity="1" Foreground="FloralWhite" Text="{Binding SelectedItem.FormattedAddress}" TextTrimming="CharacterEllipsis"></TextBlock>
                                        <HyperlinkButton Opacity="1" Foreground="FloralWhite" NavigateUri="{Binding SelectedItem.UserLink}" Content="{Binding SelectedItem.UserLink}" Margin="1"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>
            </PivotItem>
        </Pivot>
    </Grid>
</Page>































